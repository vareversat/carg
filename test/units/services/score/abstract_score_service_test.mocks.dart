// Mocks generated by Mockito 5.4.6 from annotations
// in carg/test/units/services/score/abstract_score_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:carg/models/game/setting/game_setting.dart' as _i5;
import 'package:carg/models/score/round/round.dart' as _i4;
import 'package:carg/models/score/score.dart' as _i3;
import 'package:carg/repositories/score/abstract_score_repository.dart' as _i6;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AbstractScoreRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbstractScoreRepository<
        T extends _i3.Score<_i4.Round<_i5.GameSetting>>> extends _i1.Mock
    implements _i6.AbstractScoreRepository<T> {
  MockAbstractScoreRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#database),
        ),
      ) as String);

  @override
  String get environment => (super.noSuchMethod(
        Invocation.getter(#environment),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#environment),
        ),
      ) as String);

  @override
  _i2.FirebaseFirestore get provider => (super.noSuchMethod(
        Invocation.getter(#provider),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#provider),
        ),
      ) as _i2.FirebaseFirestore);

  @override
  String get connectionString => (super.noSuchMethod(
        Invocation.getter(#connectionString),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#connectionString),
        ),
      ) as String);

  @override
  set lastFetchGameDocument(
          _i2.DocumentSnapshot<Object?>? _lastFetchGameDocument) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastFetchGameDocument,
          _lastFetchGameDocument,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionString(String? _connectionString) => super.noSuchMethod(
        Invocation.setter(
          #connectionString,
          _connectionString,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<T?> getScoreByGame(String? gameId) => (super.noSuchMethod(
        Invocation.method(
          #getScoreByGame,
          [gameId],
        ),
        returnValue: _i8.Future<T?>.value(),
      ) as _i8.Future<T?>);

  @override
  _i8.Stream<T?> getScoreByGameStream(String? gameId) => (super.noSuchMethod(
        Invocation.method(
          #getScoreByGameStream,
          [gameId],
        ),
        returnValue: _i8.Stream<T?>.empty(),
      ) as _i8.Stream<T?>);

  @override
  _i8.Future<void> deleteScoreByGame(String? gameId) => (super.noSuchMethod(
        Invocation.method(
          #deleteScoreByGame,
          [gameId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<T?> get(String? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue: _i8.Future<T?>.value(),
      ) as _i8.Future<T?>);

  @override
  _i8.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateField(
    String? id,
    String? fieldName,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateField,
          [
            id,
            fieldName,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> partialUpdate(
    T? t,
    Map<String, dynamic>? partToUpdate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #partialUpdate,
          [
            t,
            partToUpdate,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> update(T? t) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [t],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> create(T? t) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [t],
        ),
        returnValue: _i8.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #create,
            [t],
          ),
        )),
      ) as _i8.Future<String>);
}
